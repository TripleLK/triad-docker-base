# Generated by Django 5.1.7 on 2025-06-07 16:17

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('content_extractor', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FieldSelectionSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(help_text='Site domain being worked on', max_length=255)),
                ('session_name', models.CharField(help_text='Descriptive session name', max_length=100)),
                ('completed_fields', models.JSONField(default=list, help_text='List of field names that have been completed')),
                ('current_field', models.CharField(blank=True, help_text='Currently active field being selected', max_length=50)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('total_fields', models.IntegerField(default=14, help_text='Total LabEquipmentPage fields')),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='SiteFieldSelector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(help_text="Site domain (e.g., 'airscience.com')", max_length=255)),
                ('site_name', models.CharField(help_text='Human-readable site name', max_length=100)),
                ('field_name', models.CharField(choices=[('title', 'Title'), ('short_description', 'Short Description'), ('full_description', 'Full Description'), ('models', 'Models'), ('features', 'Features'), ('accessories', 'Accessories'), ('categorized_tags', 'Categorized Tags'), ('gallery_images', 'Gallery Images'), ('spec_groups', 'Specification Groups'), ('source_url', 'Source URL'), ('specification_confidence', 'Specification Confidence'), ('needs_review', 'Needs Review'), ('data_completeness', 'Data Completeness'), ('source_type', 'Source Type')], help_text='LabEquipmentPage field name', max_length=50)),
                ('xpath', models.TextField(help_text='XPath selector for this field')),
                ('css_selector', models.TextField(blank=True, help_text='CSS selector alternative')),
                ('requires_manual_input', models.BooleanField(default=False, help_text='If True, this field requires manual input rather than selection')),
                ('manual_input_note', models.TextField(blank=True, help_text='Instructions for manual input (if required)')),
                ('success_rate', models.FloatField(default=0.0, help_text='Success rate (0-1) from cross-page testing')),
                ('pages_tested', models.IntegerField(default=0, help_text='Number of pages this selector has been tested on')),
                ('pages_successful', models.IntegerField(default=0, help_text='Number of pages where selector worked')),
                ('last_tested', models.DateTimeField(blank=True, null=True)),
                ('created_from_url', models.URLField(help_text='URL where this selector was originally created')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('times_used', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['domain', 'field_name', '-success_rate'],
                'unique_together': {('domain', 'field_name')},
            },
        ),
        migrations.CreateModel(
            name='SelectorTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_url', models.URLField(help_text='URL where selector was tested')),
                ('result', models.CharField(choices=[('success', 'Success - Content Found'), ('no_match', 'No Match - Selector Found Nothing'), ('error', 'Error - Selector Failed'), ('invalid_content', 'Invalid Content - Wrong Content Type')], max_length=20)),
                ('extracted_content', models.TextField(blank=True, help_text='Content extracted by selector')),
                ('content_preview', models.CharField(blank=True, help_text='First 200 chars of extracted content', max_length=200)),
                ('tested_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('test_duration', models.FloatField(help_text='Time taken to test selector (seconds)')),
                ('error_message', models.TextField(blank=True, help_text='Error message if test failed')),
                ('selector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='content_extractor.sitefieldselector')),
            ],
            options={
                'ordering': ['-tested_at'],
                'unique_together': {('selector', 'test_url')},
            },
        ),
    ]
