# Generated by Django 5.1.7 on 2025-06-08 16:55

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('content_extractor', '0004_alter_fieldselectionsession_total_fields_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentExtractionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(help_text='Unique identifier for this extraction session', max_length=255, unique=True)),
                ('source_url', models.URLField(help_text='Source URL where content was extracted')),
                ('extraction_timestamp', models.DateTimeField(auto_now_add=True, help_text='When this extraction was performed')),
                ('title', models.CharField(blank=True, help_text='Equipment title/name', max_length=255)),
                ('title_ai_comment', models.TextField(blank=True, help_text='AI processing notes for title field')),
                ('short_description', models.TextField(blank=True, help_text='Brief equipment description')),
                ('short_description_ai_comment', models.TextField(blank=True, help_text='AI processing notes for short description')),
                ('full_description', models.TextField(blank=True, help_text='Detailed equipment description')),
                ('full_description_ai_comment', models.TextField(blank=True, help_text='AI processing notes for full description')),
                ('models_text', models.TextField(blank=True, help_text='Equipment models information')),
                ('models_ai_comment', models.TextField(blank=True, help_text='AI processing notes for models')),
                ('features', models.TextField(blank=True, help_text='Equipment features')),
                ('features_ai_comment', models.TextField(blank=True, help_text='AI processing notes for features')),
                ('accessories', models.TextField(blank=True, help_text='Equipment accessories')),
                ('accessories_ai_comment', models.TextField(blank=True, help_text='AI processing notes for accessories')),
                ('specifications', models.TextField(blank=True, help_text='Technical specifications')),
                ('specifications_ai_comment', models.TextField(blank=True, help_text='AI processing notes for specifications')),
                ('categorized_tags', models.TextField(blank=True, help_text='Category tags')),
                ('categorized_tags_ai_comment', models.TextField(blank=True, help_text='AI processing notes for tags')),
                ('gallery_images', models.TextField(blank=True, help_text='Image information/URLs')),
                ('gallery_images_ai_comment', models.TextField(blank=True, help_text='AI processing notes for images')),
                ('source_type', models.CharField(blank=True, choices=[('new', 'New Equipment'), ('used', 'Used Equipment'), ('refurbished', 'Refurbished Equipment'), ('unknown', 'Unknown')], default='unknown', help_text='Equipment condition type', max_length=20)),
                ('source_type_ai_comment', models.TextField(blank=True, help_text='AI processing notes for source type')),
                ('data_completeness', models.FloatField(blank=True, help_text='Completeness score (0.0 to 1.0)', null=True)),
                ('data_completeness_ai_comment', models.TextField(blank=True, help_text='AI processing notes for completeness assessment')),
                ('specification_confidence', models.CharField(blank=True, choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], help_text='Confidence in extracted specifications', max_length=10)),
                ('specification_confidence_ai_comment', models.TextField(blank=True, help_text='AI processing notes for confidence assessment')),
                ('needs_review', models.BooleanField(default=False, help_text='Indicates if extraction needs human review')),
                ('needs_review_ai_comment', models.TextField(blank=True, help_text='AI processing notes for review requirements')),
                ('extraction_method', models.CharField(choices=[('bookmarklet', 'Browser Bookmarklet'), ('selenium', 'Selenium Automation'), ('manual', 'Manual Input'), ('api', 'API Integration')], default='bookmarklet', help_text='Method used for content extraction', max_length=50)),
                ('overall_ai_notes', models.TextField(blank=True, help_text='General AI processing notes for entire extraction')),
                ('status', models.CharField(choices=[('extracted', 'Content Extracted'), ('processing', 'AI Processing'), ('completed', 'Processing Complete'), ('review_needed', 'Needs Review'), ('published', 'Published to LabEquipmentPage')], default='extracted', help_text='Current processing status', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Content Extraction Record',
                'verbose_name_plural': 'Content Extraction Records',
                'ordering': ['-extraction_timestamp'],
            },
        ),
    ]
