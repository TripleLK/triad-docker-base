# Generated by Django 5.1.7 on 2025-06-08 03:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('content_extractor', '0003_update_field_count'),
    ]

    operations = [
        migrations.AlterField(
            model_name='fieldselectionsession',
            name='total_fields',
            field=models.IntegerField(default=14, help_text='Total LabEquipmentPage fields'),
        ),
        migrations.CreateModel(
            name='AIPreparationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(help_text='Unique identifier for grouping related extractions', max_length=255)),
                ('source_url', models.URLField(help_text='Source URL where content was extracted')),
                ('extraction_timestamp', models.DateTimeField(auto_now_add=True, help_text='When this extraction was performed')),
                ('field_name', models.CharField(help_text="Name of the field being extracted (e.g., 'title', 'description')", max_length=255)),
                ('extracted_content', models.TextField(help_text='The actual extracted text content')),
                ('xpath_used', models.TextField(help_text='XPath selector that extracted this content')),
                ('css_selector_used', models.TextField(blank=True, help_text='CSS selector alternative (if applicable)')),
                ('user_comment', models.TextField(blank=True, help_text='User-provided context for AI processing')),
                ('extraction_method', models.CharField(choices=[('page_selection', 'Selected from page'), ('text_input', 'Manual text input'), ('xpath_edit', 'Edited XPath selection')], default='page_selection', help_text='Method used to extract this content', max_length=50)),
                ('confidence_level', models.CharField(choices=[('high', 'High Confidence'), ('medium', 'Medium Confidence'), ('low', 'Low Confidence')], default='medium', help_text='Confidence level in extraction accuracy', max_length=20)),
                ('content_type', models.CharField(choices=[('text', 'Plain Text'), ('list', 'List of Items'), ('nested_data', 'Nested/Structured Data'), ('html', 'HTML Content'), ('number', 'Numeric Data'), ('url', 'URL/Link')], default='text', help_text='Type of content for AI processing optimization', max_length=100)),
                ('preprocessing_notes', models.TextField(blank=True, help_text='Technical notes for AI processing')),
                ('validation_status', models.CharField(choices=[('valid', 'Valid'), ('needs_review', 'Needs Review'), ('error', 'Error - Needs Fixing')], default='valid', help_text='Validation status of extracted content', max_length=20)),
                ('instance_index', models.IntegerField(default=0, help_text='Instance number for multi-instance fields (0 for single instance)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_record', models.ForeignKey(blank=True, help_text='Parent record for nested content structures', null=True, on_delete=django.db.models.deletion.CASCADE, to='content_extractor.aipreparationrecord')),
            ],
            options={
                'ordering': ['session_id', 'field_name', 'instance_index'],
                'indexes': [models.Index(fields=['session_id', 'field_name'], name='content_ext_session_8fa975_idx'), models.Index(fields=['source_url', 'extraction_timestamp'], name='content_ext_source__53895f_idx'), models.Index(fields=['validation_status'], name='content_ext_validat_71d9c4_idx')],
                'unique_together': {('session_id', 'field_name', 'instance_index')},
            },
        ),
    ]
