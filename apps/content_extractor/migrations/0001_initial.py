# Generated by Django 5.1.7 on 2025-06-07 14:38

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExtractionProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Descriptive name for this extraction project', max_length=255)),
                ('domain', models.URLField(help_text='Base domain being analyzed')),
                ('description', models.TextField(blank=True, help_text='Project description and goals')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('setup', 'Setup - Adding Pages'), ('selecting', 'Human Selection In Progress'), ('analyzing', 'Analyzing Selectors'), ('complete', 'Complete - Selectors Ready'), ('archived', 'Archived')], default='setup', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyzedPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='Full URL of the analyzed page')),
                ('title', models.CharField(blank=True, help_text='Page title extracted from HTML', max_length=500)),
                ('original_html', models.TextField(help_text='Original HTML content')),
                ('processed_dom', models.JSONField(help_text='Simplified DOM structure as JSON')),
                ('analyzed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('content_hash', models.CharField(help_text='Hash of processed content for change detection', max_length=64)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='content_extractor.extractionproject')),
            ],
            options={
                'ordering': ['url'],
                'unique_together': {('project', 'url')},
            },
        ),
        migrations.CreateModel(
            name='SelectionSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('current_page_index', models.IntegerField(default=0)),
                ('selections_made', models.JSONField(default=dict, help_text='Temporary storage for selections during active session')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='content_extractor.extractionproject')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ContentSelector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Human-readable label for this content type', max_length=100)),
                ('xpath', models.TextField(help_text='XPath selector for this content')),
                ('css_selector', models.TextField(blank=True, help_text='CSS selector alternative (if applicable)')),
                ('confidence_score', models.FloatField(default=1.0, help_text='Confidence score (0-1) based on cross-page validation')),
                ('is_generalized', models.BooleanField(default=False, help_text='Whether this selector was generalized from patterns')),
                ('base_pattern', models.TextField(blank=True, help_text='Base pattern used for generalization')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by_human', models.BooleanField(default=True, help_text='Whether this selector was created by human selection or algorithm')),
                ('pages_matched', models.ManyToManyField(blank=True, help_text='Pages where this selector successfully extracts content', to='content_extractor.analyzedpage')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selectors', to='content_extractor.extractionproject')),
            ],
            options={
                'ordering': ['label', '-confidence_score'],
                'unique_together': {('project', 'label')},
            },
        ),
    ]
