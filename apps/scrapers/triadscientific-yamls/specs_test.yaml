---
# Test selector for specifications - simple approach to understand type flow
mapping_selector:
  mapping:
    section_title:
      - plain_text_selector:
          text: "Technical Specifications"
    vals:
      # Step 1: Get the full description paragraph (returns SINGLE)
      - css_selector:
          css_selector: "div.col-12.col-sm-12.col-lg-12.col-xl-9 > p"
          index: 0
          required: false
      
      # Step 2: Get HTML content (converts SINGLE to VALUE containing HTML)
      - html_selector
      
      # Step 3: Replace <br> tags with newlines for parsing
      - regex_selector:
          pattern: "<br ?/?>|<br>"
          replace: "\n"
          
      # Step 4: Remove any remaining HTML tags
      - regex_selector:
          pattern: "<[^>]+>"
          replace: ""
          
      # Step 5: Split by newlines (converts VALUE to MULTIPLE of VALUEs)
      - split_selector:
          delimiter: "\n"
          
      # Step 6: Process each line separately
      - for_each_selector:
          selector:
            # Step 6.1: Convert VALUE to SINGLE for regex processing
            - value_to_single_selector
            
            # Step 6.2: Extract key-value pair using regex pattern
            - mapping_selector:
                mapping:
                  spec_name:
                    - regex_selector:
                        pattern: "^\\s*(.*?):\\s*"
                        group: 1
                        required: false
                  spec_value:
                    - regex_selector:
                        pattern: "^\\s*.*?:\\s*(.*?)\\s*$"
                        group: 1
                        required: false
                required: false
                
          # Skip empty lines and lines that don't match our pattern
          skip_empty: true
          skip_on_fail: true 