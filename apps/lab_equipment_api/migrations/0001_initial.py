# Generated by Django 5.1.7 on 2025-06-06 20:02

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('endpoint', models.CharField(max_length=200)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_size', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('response_status_code', models.PositiveIntegerField(blank=True, null=True)),
                ('response_size', models.PositiveIntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BatchOperation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('operation_type', models.CharField(choices=[('create', 'Create Equipment'), ('update', 'Update Equipment'), ('delete', 'Delete Equipment'), ('validate', 'Validate Data'), ('migrate', 'Migrate Data')], max_length=20)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partially Completed'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('total_items', models.PositiveIntegerField(default=0)),
                ('processed_items', models.PositiveIntegerField(default=0)),
                ('successful_items', models.PositiveIntegerField(default=0)),
                ('failed_items', models.PositiveIntegerField(default=0)),
                ('current_item_index', models.PositiveIntegerField(default=0)),
                ('progress_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('result_summary', models.JSONField(blank=True, default=dict)),
                ('error_details', models.JSONField(blank=True, default=list)),
                ('api_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='batch_operation', to='lab_equipment_api.apirequest')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('error_type', models.CharField(choices=[('validation', 'Validation Error'), ('processing', 'Processing Error'), ('external', 'External Service Error'), ('database', 'Database Error'), ('permission', 'Permission Error'), ('system', 'System Error')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('error_code', models.CharField(blank=True, max_length=50)),
                ('message', models.TextField()),
                ('stack_trace', models.TextField(blank=True)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('api_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='error_logs', to='lab_equipment_api.apirequest')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at', '-severity'],
            },
        ),
        migrations.CreateModel(
            name='ValidationResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('validation_type', models.CharField(choices=[('equipment', 'Equipment Data'), ('tags', 'Tag Data'), ('specifications', 'Specification Data'), ('models', 'Model Data'), ('images', 'Image Data'), ('batch', 'Batch Operation')], max_length=20)),
                ('result_level', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=10)),
                ('field_name', models.CharField(blank=True, max_length=100)),
                ('error_code', models.CharField(blank=True, max_length=50)),
                ('message', models.TextField()),
                ('suggested_fix', models.TextField(blank=True)),
                ('item_id', models.CharField(blank=True, max_length=100)),
                ('item_type', models.CharField(blank=True, max_length=50)),
                ('validation_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('api_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validation_results', to='lab_equipment_api.apirequest')),
            ],
            options={
                'ordering': ['-created_at', 'result_level'],
            },
        ),
        migrations.CreateModel(
            name='APIConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('config_type', models.CharField(choices=[('validation', 'Validation Rules'), ('processing', 'Processing Settings'), ('limits', 'Rate Limits'), ('features', 'Feature Flags'), ('integration', 'Integration Settings')], max_length=20)),
                ('value', models.JSONField()),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['config_type', 'key'],
                'indexes': [models.Index(fields=['config_type', 'is_active'], name='lab_equipme_config__f97a08_idx'), models.Index(fields=['key', 'is_active'], name='lab_equipme_key_2b3ac7_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='apirequest',
            index=models.Index(fields=['user', 'created_at'], name='lab_equipme_user_id_f89da8_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequest',
            index=models.Index(fields=['endpoint', 'status'], name='lab_equipme_endpoin_c619c7_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequest',
            index=models.Index(fields=['created_at', 'status'], name='lab_equipme_created_d7c159_idx'),
        ),
        migrations.AddIndex(
            model_name='batchoperation',
            index=models.Index(fields=['status', 'created_at'], name='lab_equipme_status_9c2d20_idx'),
        ),
        migrations.AddIndex(
            model_name='batchoperation',
            index=models.Index(fields=['operation_type', 'status'], name='lab_equipme_operati_25f41b_idx'),
        ),
        migrations.AddIndex(
            model_name='errorlog',
            index=models.Index(fields=['error_type', 'severity'], name='lab_equipme_error_t_747a06_idx'),
        ),
        migrations.AddIndex(
            model_name='errorlog',
            index=models.Index(fields=['is_resolved', 'created_at'], name='lab_equipme_is_reso_5c27b8_idx'),
        ),
        migrations.AddIndex(
            model_name='errorlog',
            index=models.Index(fields=['api_request', 'error_type'], name='lab_equipme_api_req_6b2b45_idx'),
        ),
        migrations.AddIndex(
            model_name='validationresult',
            index=models.Index(fields=['api_request', 'result_level'], name='lab_equipme_api_req_d97028_idx'),
        ),
        migrations.AddIndex(
            model_name='validationresult',
            index=models.Index(fields=['validation_type', 'result_level'], name='lab_equipme_validat_4c62fe_idx'),
        ),
    ]
